<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net35;net45;netstandard1.3;netstandard2.0;netcoreapp2.0</TargetFrameworks>
        <Authors>Denis Zykov</Authors>
        <Version>1.2.0</Version>
        <PackageId>ConsoleApp.CommandLine</PackageId>
        <Product>ConsoleApp.CommandLine</Product>
        <Description>Command line application utility package. Provides API for parsing and binding command line arguments to .NET methods.</Description>
        <Company />
        <SignAssembly>True</SignAssembly>
        <AssemblyOriginatorKeyFile>sign.snk</AssemblyOriginatorKeyFile>
        <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
        <ApplicationIcon />
        <StartupObject />
        <OutputTypeEx>library</OutputTypeEx>
        <OutputType>Library</OutputType>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <FileVersion>1.2.0.0</FileVersion>
        <PackageReleaseNotes># 1.2.0
- CommandLine.UnhandledException type changed to ExceptionEventHandler
- added custom description attributes as replacement to System.ComponentModel attributes: HelpTextAttribute and HiddenAttribute
- added support of .NET Standard platform

# 1.1.3
- refactored error messages fo parameters binding failure cases.
- added CommandLineException to signal binding failures.
- fixed few array parameter binding bugs

# 1.1.2
- added bare double hyphen to enforce positional parameters
- added bare single hyphen to disable hyphen interpretation in values
- added special treatment for negative numbers
- added CommandLine.DescribeOnBindFailure which controls reaction on method binding failure (true to run CommandLine.Describe(), false to throw exception).
- added enum flags binding subroutine, now "--flag Flag1 Flag2 Flag3" arguments are supported.
- changed method binding order to from most parameters to less (original was chaotic), binding strategy is still - "first match".
- added non-generic Run and Describe methods
- fixed bug with positional parameters binding

# 1.0.0
- initial release</PackageReleaseNotes>
        <Copyright>(c) Denis Zykov 2017</Copyright>
        <RepositoryType>git</RepositoryType>
        <PackageTags>commandline console terminal</PackageTags>
        <PackageProjectUrl>https://github.com/deniszykov/commandline</PackageProjectUrl>
        <RepositoryUrl>https://github.com/deniszykov/commandline</RepositoryUrl>
        <PackageLicenseUrl>https://raw.githubusercontent.com/deniszykov/commandline/master/LICENSE</PackageLicenseUrl>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <Optimize>False</Optimize>
        <DefineConstants>RELEASE</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DefineConstants>DEBUG;TRACE</DefineConstants>
    </PropertyGroup>
    <ItemGroup>
        <None Include="sign.snk" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="TypeConvert" Version="1.1.0" />
    </ItemGroup>
    <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' ">
        <DefineConstants>$(DefineConstants);NETSTANDARD;NETSTANDARD13;</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
        <DefineConstants>$(DefineConstants);NETSTANDARD;NETSTANDARD20;</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.0' ">
        <DefineConstants>$(DefineConstants);NETCOREAPP;</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' ">
        <DefineConstants>$(DefineConstants);NET45</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(TargetFramework)' == 'net35' ">
        <DefineConstants>$(DefineConstants);NET35</DefineConstants>
    </PropertyGroup>
</Project>